
{"header":["Accept: application/json"],"response_header":["Content-Type: application/json"],"description":"**Search for an order**\n\n* `description` describe the search\n* `model` searched model\n* `criteria` set parameters for the search. Here, it can be a combination of the following attributes:\n    * `pipeline` \n    * `items` which itself can contain the parameters `uuid`, `status`, `role` and `batch_uuid`\n    * `status`\n    * `cost_code`\n\nThe search below looks for an order for the `pipeline 1` which has a status `in_progress`. On top of\nthat, the search looks for an order which contains an item which has the uuid \n`11111111-2222-3333-4444-555555555555` in the status `done` with the role `role A` and assigned to the\nbatch `11111111-2222-3333-4444-666666666666`.\n\nYou can specify arrays in the criteria as well. For example, if you need to get an order which \ncontains items with role `role A` and `role B`, you could have the following criteria:\n`\"criteria\": { \"item\": { \"role\": [\"role A\", \"role B\"] } }`\n\nTo actually get the search results, you need to access the first page of result \nthanks to the `first` action in the JSON response.\n","method":"POST","url":"/searches","parameters":"{ \"search\": {\n    \"description\": \"search for an order\",\n    \"model\": \"plate\",\n    \"criteria\": {\n        \"pipeline\": \"pipeline 1\",\n        \"status\": \"in_progress\",\n        \"item\": {\n            \"uuid\": \"11111111-2222-3333-4444-555555555555\",\n            \"status\": \"done\",\n            \"role\": \"role A\",\n            \"batch_uuid\": \"11111111-2222-3333-4444-666666666666\"\n        }\n    }\n}}\n","status":200,"response":"{\n    \"search\": {\n        \"actions\": {\n            \"read\": \"/11111111-2222-3333-4444-555555555555\",\n            \"first\": \"/11111111-2222-3333-4444-555555555555/page=1\",\n            \"last\": \"/11111111-2222-3333-4444-555555555555/page=-1\"\n        },\n        \"uuid\": \"11111111-2222-3333-4444-555555555555\"\n    }\n}\n"}
